@use '@angular/material' as mat;

@include mat.core();

/*// Define a dark theme
$dark-theme: mat.define-dark-theme((
  color: (
    primary: mat.define-palette(mat.$pink-palette),
    accent: mat.define-palette(mat.$blue-grey-palette),
  ),
  // Only include `typography` and `density` in the default dark theme.
  typography: mat.define-typography-config(),
  density: 0,
));

// Define a light theme
$light-theme: mat.define-light-theme((
  color: (
    primary: mat.define-palette(mat.$indigo-palette),
    accent: mat.define-palette(mat.$pink-palette),
  ),
));

// Apply the dark theme by default
@include mat.core-theme($dark-theme);
@include mat.button-theme($dark-theme);*/

// Apply the light theme only when the user prefers light themes.
/*@media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.core-color($light-theme);
  @include mat.button-color($light-theme);
}*/
$dark-primary-text: rgba(black, 0.87);
$light-primary-text: white;

$primary-palette: mat.define-palette((
  50: #e8eaf6,
  100: #c5cae9,
  200: #9fa8da,
  300: #7986cb,
  400: #5c6bc0,
  500: #3f51b5,
  600: #3949ab,
  700: #303f9f,
  800: #283593,
  900: #1a237e,
  A100: #8c9eff,
  A200: #536dfe,
  A400: #3d5afe,
  A700: #304ffe,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $light-primary-text,
    400: $light-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $dark-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  )
));
$accent-palette: mat.define-palette(mat.$pink-palette);

$app-theme: mat.define-light-theme((
  color: (
    primary: $primary-palette,
    accent: $accent-palette,
  ),
  // Only include `typography` and `density` in the default dark theme.
  typography: mat.define-typography-config($font-family: verdana),
  density: 0,
));

@include mat.all-component-themes($app-theme);

.mdc-button {
  background: mat.get-color-from-palette($primary-palette, 'default') !important;
  color: mat.get-color-from-palette($primary-palette, 'default-contrast') !important;

  &:hover {
    background: mat.get-color-from-palette($primary-palette, 'darker') !important;
    color: mat.get-color-from-palette($primary-palette, 'darker-contrast') !important;
  }

  &.disabled {
    background: mat.get-color-from-palette($primary-palette, 'lighter') !important;
    color: mat.get-color-from-palette($primary-palette, 'lighter-contrast') !important;
  }
}

.mat-mdc-form-field {
  color: mat.get-color-from-palette($primary-palette, '100-contrast');
}

.mat-mdc-tooltip-panel {
  white-space: break-spaces;
}

.mat-mdc-menu-item .mat-icon {
  margin-right: 0;
}
